<launch>
    <arg name="robot_name"/>
    <arg name="initX" default="0"/>
    <arg name="initY" default="0" />
    <arg name="initYaw" default="0" />

    <!-- For multimaster bringup, need to load the controller config -->
    <!-- <rosparam command="load" file="$(find husky_control)/config/control.yaml" /> -->
    <include file="$(find husky_control)/launch/control.launch"></include>

    <node name="spawn_minibot_model" pkg="gazebo_ros" type="spawn_model"
     args="-x $(arg initX) -y $(arg initY) -Y $(arg initYaw) -urdf -param /robot_description -model $(arg robot_name)"
     respawn="false" output="screen" />
   <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    	<param name="publish_frequency" type="double" value="50.0" />
    	<param name="tf_prefix" value="$(arg robot_name)"/>
    </node> -->
 
  <!-- Or we could just set this as a static offset -->
  <node pkg="tf" type="static_transform_publisher" name="map_broadcaster" args="$(arg initX) $(arg initY) 0 $(arg initYaw) 0 0 /map /$(arg robot_name)/odom 100" /> 
 
 Twister server for rviz control
<!-- <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen">
   <param name="link_name" value="$(arg robot_name)/base_link" />
 </node> -->
    <!-- The odometry estimator, throttling, fake laser etc. go here -->
    <!-- All the stuff as from usual robot launch file -->
</launch>
